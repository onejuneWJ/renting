<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.tf.dao.HouseDao">
    <resultMap id="BaseResultMap" type="cn.edu.tf.pojo.House">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="plot_id" jdbcType="BIGINT" property="plotId"/>
        <result column="huxing_shi" jdbcType="INTEGER" property="huxingShi"/>
        <result column="huxing_ting" jdbcType="INTEGER" property="huxingTing"/>
        <result column="huxing_wei" jdbcType="INTEGER" property="huxingWei"/>
        <result column="area" jdbcType="INTEGER" property="area"/>
        <result column="current_floor" jdbcType="INTEGER" property="currentFloor"/>
        <result column="total_floor" jdbcType="INTEGER" property="totalFloor"/>
        <result column="towards_id" jdbcType="INTEGER" property="towardsId"/>
        <result column="rental" jdbcType="DOUBLE" property="rental"/>
        <result column="payment_id" jdbcType="INTEGER" property="paymentId"/>
        <result column="rental_include" jdbcType="VARCHAR" property="rentalInclude"/>
        <result column="house_include" jdbcType="VARCHAR" property="houseInclude"/>
        <result column="require" jdbcType="VARCHAR" property="require"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="img_box_id" jdbcType="BIGINT" property="imgBoxId"/>
        <result column="contact_information_id" jdbcType="BIGINT" property="contactInformationId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, plot_id, huxing_shi, huxing_ting, huxing_wei, area, current_floor, total_floor,
    towards_id, rental, payment_id, rental_include, house_include, `require`, description, 
    img_box_id, contact_information_id
    </sql>
    <select id="selectByExample" parameterType="cn.edu.tf.pojo.HouseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from house
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from house
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.edu.tf.pojo.HouseExample">
        delete from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.edu.tf.pojo.House" useGeneratedKeys="true">
        insert into house (user_id, plot_id, huxing_shi,
                           huxing_ting, huxing_wei, area,
                           current_floor, total_floor, towards_id,
                           rental, payment_id, rental_include,
                           house_include, `require`, description,
                           img_box_id, contact_information_id)
        values (#{userId,jdbcType=BIGINT}, #{plotId,jdbcType=BIGINT}, #{huxingShi,jdbcType=INTEGER},
                #{huxingTing,jdbcType=INTEGER}, #{huxingWei,jdbcType=INTEGER}, #{area,jdbcType=INTEGER},
                #{currentFloor,jdbcType=INTEGER}, #{totalFloor,jdbcType=INTEGER}, #{towardsId,jdbcType=INTEGER},
                #{rental,jdbcType=DOUBLE}, #{paymentId,jdbcType=INTEGER}, #{rentalInclude,jdbcType=VARCHAR},
                #{houseInclude,jdbcType=VARCHAR}, #{require,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{imgBoxId,jdbcType=BIGINT}, #{contactInformationId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.edu.tf.pojo.House"
            useGeneratedKeys="true">
        insert into house
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="plotId != null">
                plot_id,
            </if>
            <if test="huxingShi != null">
                huxing_shi,
            </if>
            <if test="huxingTing != null">
                huxing_ting,
            </if>
            <if test="huxingWei != null">
                huxing_wei,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="currentFloor != null">
                current_floor,
            </if>
            <if test="totalFloor != null">
                total_floor,
            </if>
            <if test="towardsId != null">
                towards_id,
            </if>
            <if test="rental != null">
                rental,
            </if>
            <if test="paymentId != null">
                payment_id,
            </if>
            <if test="rentalInclude != null">
                rental_include,
            </if>
            <if test="houseInclude != null">
                house_include,
            </if>
            <if test="require != null">
                `require`,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="imgBoxId != null">
                img_box_id,
            </if>
            <if test="contactInformationId != null">
                contact_information_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="plotId != null">
                #{plotId,jdbcType=BIGINT},
            </if>
            <if test="huxingShi != null">
                #{huxingShi,jdbcType=INTEGER},
            </if>
            <if test="huxingTing != null">
                #{huxingTing,jdbcType=INTEGER},
            </if>
            <if test="huxingWei != null">
                #{huxingWei,jdbcType=INTEGER},
            </if>
            <if test="area != null">
                #{area,jdbcType=INTEGER},
            </if>
            <if test="currentFloor != null">
                #{currentFloor,jdbcType=INTEGER},
            </if>
            <if test="totalFloor != null">
                #{totalFloor,jdbcType=INTEGER},
            </if>
            <if test="towardsId != null">
                #{towardsId,jdbcType=INTEGER},
            </if>
            <if test="rental != null">
                #{rental,jdbcType=DOUBLE},
            </if>
            <if test="paymentId != null">
                #{paymentId,jdbcType=INTEGER},
            </if>
            <if test="rentalInclude != null">
                #{rentalInclude,jdbcType=VARCHAR},
            </if>
            <if test="houseInclude != null">
                #{houseInclude,jdbcType=VARCHAR},
            </if>
            <if test="require != null">
                #{require,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="imgBoxId != null">
                #{imgBoxId,jdbcType=BIGINT},
            </if>
            <if test="contactInformationId != null">
                #{contactInformationId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.tf.pojo.HouseExample" resultType="java.lang.Long">
        select count(*) from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <resultMap id="houseResultMap" type="cn.edu.tf.dto.HouseDTO">
        <result property="id" column="id"/>
        <result property="huxingShi" column="huxing_shi"/>
        <result property="huxingTing" column="huxing_ting"/>
        <result property="huxingWei" column="huxing_wei"/>
        <result property="area" column="area"/>
        <result property="currentFloor" column="current_floor"/>
        <result property="totalFloor" column="total_floor"/>
        <result property="rental" column="rental"/>
        <result property="rentalInclude" column="rental_include"/>
        <result property="houseInclude" column="house_include"/>
        <result property="require" column="require"/>
        <result property="description" column="description"/>
        <result property="imgBoxId" column="img_box_id"/>
        <result property="plotName" column="plot_name"/>
        <result property="address" column="address"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="avatar" column="avatar"/>
        <result property="payment" column="payment"/>
        <result property="towards" column="towards"/>
        <result property="contactName" column="contact_name"/>
        <result property="contactGender" column="contact_gender"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="receiveTimeStart" column="receive_time_start"/>
        <result property="receiveTimeEnd" column="receive_time_end"/>
        <collection property="imgList" ofType="cn.edu.tf.pojo.Img">
            <result property="imgName" column="img_name"/>
            <result property="url" column="url"/>
        </collection>
    </resultMap>
    <select id="selectByCity" resultMap="houseResultMap">
        select
        house.id,
        house.huxing_shi,
        house.huxing_ting,
        house.huxing_wei,
        house.area,
        house.current_floor,
        house.total_floor,
        house.rental,
        house.rental_include,
        house.house_include,
        house.`require`,
        house.description,
        house.img_box_id,
        plot.plot_name,
        plot.address,
        u.username,
        u.nickname,
        u.email,
        u.avatar,
        pm.name payment,
        tw.name towards,
        ci.name contact_name,
        ci.gender contact_gender,
        ci.phone contact_phone,
        ci.receive_time_start,
        ci.receive_time_end,
        img.id,
        img.img_name,
        img.url
        from house
        left join user u on house.user_id=u.id
            left join payment pm on pm.id=house.payment_id
            left join towards tw on tw.id=house.towards_id
            left join contact_information ci on ci.id=house.contact_information_id
            left join img on img.box_id=house.img_box_id
        left join plot on plot.id=house.plot_id
        left join location l on l.id=plot.location_id and l.city_id=#{cityId}

    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update house
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.plotId != null">
                plot_id = #{record.plotId,jdbcType=BIGINT},
            </if>
            <if test="record.huxingShi != null">
                huxing_shi = #{record.huxingShi,jdbcType=INTEGER},
            </if>
            <if test="record.huxingTing != null">
                huxing_ting = #{record.huxingTing,jdbcType=INTEGER},
            </if>
            <if test="record.huxingWei != null">
                huxing_wei = #{record.huxingWei,jdbcType=INTEGER},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=INTEGER},
            </if>
            <if test="record.currentFloor != null">
                current_floor = #{record.currentFloor,jdbcType=INTEGER},
            </if>
            <if test="record.totalFloor != null">
                total_floor = #{record.totalFloor,jdbcType=INTEGER},
            </if>
            <if test="record.towardsId != null">
                towards_id = #{record.towardsId,jdbcType=INTEGER},
            </if>
            <if test="record.rental != null">
                rental = #{record.rental,jdbcType=DOUBLE},
            </if>
            <if test="record.paymentId != null">
                payment_id = #{record.paymentId,jdbcType=INTEGER},
            </if>
            <if test="record.rentalInclude != null">
                rental_include = #{record.rentalInclude,jdbcType=VARCHAR},
            </if>
            <if test="record.houseInclude != null">
                house_include = #{record.houseInclude,jdbcType=VARCHAR},
            </if>
            <if test="record.require != null">
                `require` = #{record.require,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.imgBoxId != null">
                img_box_id = #{record.imgBoxId,jdbcType=BIGINT},
            </if>
            <if test="record.contactInformationId != null">
                contact_information_id = #{record.contactInformationId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update house
        set id = #{record.id,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        plot_id = #{record.plotId,jdbcType=BIGINT},
        huxing_shi = #{record.huxingShi,jdbcType=INTEGER},
        huxing_ting = #{record.huxingTing,jdbcType=INTEGER},
        huxing_wei = #{record.huxingWei,jdbcType=INTEGER},
        area = #{record.area,jdbcType=INTEGER},
        current_floor = #{record.currentFloor,jdbcType=INTEGER},
        total_floor = #{record.totalFloor,jdbcType=INTEGER},
        towards_id = #{record.towardsId,jdbcType=INTEGER},
        rental = #{record.rental,jdbcType=DOUBLE},
        payment_id = #{record.paymentId,jdbcType=INTEGER},
        rental_include = #{record.rentalInclude,jdbcType=VARCHAR},
        house_include = #{record.houseInclude,jdbcType=VARCHAR},
        `require` = #{record.require,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        img_box_id = #{record.imgBoxId,jdbcType=BIGINT},
        contact_information_id = #{record.contactInformationId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.tf.pojo.House">
        update house
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="plotId != null">
                plot_id = #{plotId,jdbcType=BIGINT},
            </if>
            <if test="huxingShi != null">
                huxing_shi = #{huxingShi,jdbcType=INTEGER},
            </if>
            <if test="huxingTing != null">
                huxing_ting = #{huxingTing,jdbcType=INTEGER},
            </if>
            <if test="huxingWei != null">
                huxing_wei = #{huxingWei,jdbcType=INTEGER},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="currentFloor != null">
                current_floor = #{currentFloor,jdbcType=INTEGER},
            </if>
            <if test="totalFloor != null">
                total_floor = #{totalFloor,jdbcType=INTEGER},
            </if>
            <if test="towardsId != null">
                towards_id = #{towardsId,jdbcType=INTEGER},
            </if>
            <if test="rental != null">
                rental = #{rental,jdbcType=DOUBLE},
            </if>
            <if test="paymentId != null">
                payment_id = #{paymentId,jdbcType=INTEGER},
            </if>
            <if test="rentalInclude != null">
                rental_include = #{rentalInclude,jdbcType=VARCHAR},
            </if>
            <if test="houseInclude != null">
                house_include = #{houseInclude,jdbcType=VARCHAR},
            </if>
            <if test="require != null">
                `require` = #{require,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="imgBoxId != null">
                img_box_id = #{imgBoxId,jdbcType=BIGINT},
            </if>
            <if test="contactInformationId != null">
                contact_information_id = #{contactInformationId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.tf.pojo.House">
        update house
        set user_id                = #{userId,jdbcType=BIGINT},
            plot_id                = #{plotId,jdbcType=BIGINT},
            huxing_shi             = #{huxingShi,jdbcType=INTEGER},
            huxing_ting            = #{huxingTing,jdbcType=INTEGER},
            huxing_wei             = #{huxingWei,jdbcType=INTEGER},
            area                   = #{area,jdbcType=INTEGER},
            current_floor          = #{currentFloor,jdbcType=INTEGER},
            total_floor            = #{totalFloor,jdbcType=INTEGER},
            towards_id             = #{towardsId,jdbcType=INTEGER},
            rental                 = #{rental,jdbcType=DOUBLE},
            payment_id             = #{paymentId,jdbcType=INTEGER},
            rental_include         = #{rentalInclude,jdbcType=VARCHAR},
            house_include          = #{houseInclude,jdbcType=VARCHAR},
            `require`              = #{require,jdbcType=VARCHAR},
            description            = #{description,jdbcType=VARCHAR},
            img_box_id             = #{imgBoxId,jdbcType=BIGINT},
            contact_information_id = #{contactInformationId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>