<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.tf.dao.HouseDao">
    <resultMap id="BaseResultMap" type="cn.edu.tf.pojo.House">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="plot_id" jdbcType="BIGINT" property="plotId"/>
        <result column="huxing_shi" jdbcType="INTEGER" property="huxingShi"/>
        <result column="huxing_ting" jdbcType="INTEGER" property="huxingTing"/>
        <result column="huxing_wei" jdbcType="INTEGER" property="huxingWei"/>
        <result column="area" jdbcType="INTEGER" property="area"/>
        <result column="current_floor" jdbcType="INTEGER" property="currentFloor"/>
        <result column="total_floor" jdbcType="INTEGER" property="totalFloor"/>
        <result column="towards_id" jdbcType="INTEGER" property="towardsId"/>
        <result column="rental" jdbcType="DOUBLE" property="rental"/>
        <result column="payment_id" jdbcType="INTEGER" property="paymentId"/>
        <result column="rental_include" jdbcType="VARCHAR" property="rentalInclude"/>
        <result column="house_include" jdbcType="VARCHAR" property="houseInclude"/>
        <result column="require" jdbcType="VARCHAR" property="require"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="img_box_id" jdbcType="BIGINT" property="imgBoxId"/>
        <result column="post_time" jdbcType="TIMESTAMP" property="postTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, plot_id, huxing_shi, huxing_ting, huxing_wei, area, current_floor, total_floor,
    towards_id, rental, payment_id, rental_include, house_include, `require`, description, 
    img_box_id, post_time, `status`
    </sql>
    <select id="selectByExample" parameterType="cn.edu.tf.pojo.HouseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from house
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from house
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.edu.tf.pojo.HouseExample">
        delete from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.edu.tf.pojo.House" useGeneratedKeys="true">
        insert into house (user_id, plot_id, huxing_shi,
                           huxing_ting, huxing_wei, area,
                           current_floor, total_floor, towards_id,
                           rental, payment_id, rental_include,
                           house_include, `require`, description,
                           img_box_id, post_time,
                           `status`)
        values (#{userId,jdbcType=BIGINT}, #{plotId,jdbcType=BIGINT}, #{huxingShi,jdbcType=INTEGER},
                #{huxingTing,jdbcType=INTEGER}, #{huxingWei,jdbcType=INTEGER}, #{area,jdbcType=INTEGER},
                #{currentFloor,jdbcType=INTEGER}, #{totalFloor,jdbcType=INTEGER}, #{towardsId,jdbcType=INTEGER},
                #{rental,jdbcType=DOUBLE}, #{paymentId,jdbcType=INTEGER}, #{rentalInclude,jdbcType=VARCHAR},
                #{houseInclude,jdbcType=VARCHAR}, #{require,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{imgBoxId,jdbcType=BIGINT}, #{postTime,jdbcType=TIMESTAMP},
                #{status,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.edu.tf.pojo.House"
            useGeneratedKeys="true">
        insert into house
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="plotId != null">
                plot_id,
            </if>
            <if test="huxingShi != null">
                huxing_shi,
            </if>
            <if test="huxingTing != null">
                huxing_ting,
            </if>
            <if test="huxingWei != null">
                huxing_wei,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="currentFloor != null">
                current_floor,
            </if>
            <if test="totalFloor != null">
                total_floor,
            </if>
            <if test="towardsId != null">
                towards_id,
            </if>
            <if test="rental != null">
                rental,
            </if>
            <if test="paymentId != null">
                payment_id,
            </if>
            <if test="rentalInclude != null">
                rental_include,
            </if>
            <if test="houseInclude != null">
                house_include,
            </if>
            <if test="require != null">
                `require`,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="imgBoxId != null">
                img_box_id,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="plotId != null">
                #{plotId,jdbcType=BIGINT},
            </if>
            <if test="huxingShi != null">
                #{huxingShi,jdbcType=INTEGER},
            </if>
            <if test="huxingTing != null">
                #{huxingTing,jdbcType=INTEGER},
            </if>
            <if test="huxingWei != null">
                #{huxingWei,jdbcType=INTEGER},
            </if>
            <if test="area != null">
                #{area,jdbcType=INTEGER},
            </if>
            <if test="currentFloor != null">
                #{currentFloor,jdbcType=INTEGER},
            </if>
            <if test="totalFloor != null">
                #{totalFloor,jdbcType=INTEGER},
            </if>
            <if test="towardsId != null">
                #{towardsId,jdbcType=INTEGER},
            </if>
            <if test="rental != null">
                #{rental,jdbcType=DOUBLE},
            </if>
            <if test="paymentId != null">
                #{paymentId,jdbcType=INTEGER},
            </if>
            <if test="rentalInclude != null">
                #{rentalInclude,jdbcType=VARCHAR},
            </if>
            <if test="houseInclude != null">
                #{houseInclude,jdbcType=VARCHAR},
            </if>
            <if test="require != null">
                #{require,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="imgBoxId != null">
                #{imgBoxId,jdbcType=BIGINT},
            </if>
            <if test="postTime != null">
                #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.tf.pojo.HouseExample" resultType="java.lang.Long">
        select count(*) from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <select id="selectByCity" resultType="cn.edu.tf.dto.HouseDTO">
        select house.id,
               house.huxing_shi,
               house.huxing_ting,
               house.huxing_wei,
               house.area,
               house.current_floor,
               house.total_floor,
               house.rental,
               house.rental_include,
               house.house_include,
               house.`require`,
               house.description,
               house.img_box_id,
               house.post_time,
               house.status,
               house.post_time,
               plot.plot_name,
               plot.address,
               u.username contact_name,
               u.email,
               u.phone    contact_phone,
               u.gender   contact_gender,
               u.avatar,
               pm.name    payment,
               tw.name    towards
        from plot,
             location,
             house
                 LEFT JOIN USER u ON house.user_id = u.id
                 LEFT JOIN payment pm ON pm.id = house.payment_id
                 LEFT JOIN towards tw ON tw.id = house.towards_id
        WHERE plot.id = house.plot_id
          AND house.user_id IN(select id from user)
          AND location.id = plot.location_id
          AND location.city_id = #{cityId}
          AND house.status = 'N'
    </select>
    <select id="selectByLocation" resultType="cn.edu.tf.dto.HouseDTO">
        select house.id,
               house.huxing_shi,
               house.huxing_ting,
               house.huxing_wei,
               house.area,
               house.current_floor,
               house.total_floor,
               house.rental,
               house.rental_include,
               house.house_include,
               house.`require`,
               house.description,
               house.img_box_id,
               house.post_time,
               house.status,
               house.post_time,
               plot.plot_name,
               plot.address,
               u.username contact_name,
               u.email,
               u.phone    contact_phone,
               u.gender   contact_gender,
               u.avatar,
               pm.name    payment,
               tw.name    towards
        from plot,
             house
                 LEFT JOIN USER u ON house.user_id = u.id
                 LEFT JOIN payment pm ON pm.id = house.payment_id
                 LEFT JOIN towards tw ON tw.id = house.towards_id
        WHERE plot.id = house.plot_id
          AND house.user_id IN(select id from user)
          and plot.location_id = #{locationId}
          AND house.status = 'N'
    </select>
    <select id="selectByCondition" resultType="cn.edu.tf.dto.HouseDTO">
        select house.id,
        house.huxing_shi,
        house.huxing_ting,
        house.huxing_wei,
        house.area,
        house.current_floor,
        house.total_floor,
        house.rental,
        house.rental_include,
        house.house_include,
        house.`require`,
        house.description,
        house.img_box_id,
        house.post_time,
        house.status,
        house.post_time,
        plot.plot_name,
        plot.address,
        u.username contact_name,
        u.email,
        u.phone contact_phone,
        u.gender contact_gender,
        u.avatar,
        pm.name payment,
        tw.name towards
        from plot,
        <if test="location==null">
            location,
        </if>
        house
        LEFT JOIN USER u ON house.user_id = u.id
        LEFT JOIN payment pm ON pm.id = house.payment_id
        LEFT JOIN towards tw ON tw.id = house.towards_id
        WHERE plot.id = house.plot_id
        AND house.status='N'
        AND house.user_id IN(select id from user)
        <if test="location!=null">
            AND plot.location_id = #{location.id}
        </if>
        <if test="location==null">
            AND location.id = plot.location_id
            and location.city_id = #{city.id}
        </if>
        <if test="houseType!=null">
            <if test="houseType.num==5">
                AND house.huxing_shi >= #{houseType.num}
            </if>
            <if test="houseType.num!=5">
                AND house.huxing_shi = #{houseType.num}
            </if>
        </if>
        <if test="towards!=null">
            AND towards_id=#{towards.id}
        </if>
        <if test="rentals!=null">
            <if test="rentals.queryStart!=null and rentals.queryEnd!=null">
                AND (house.rental BETWEEN #{rentals.queryStart} AND #{rentals.queryEnd})
            </if>
            <if test="rentals.queryStart==null and rentals.queryEnd!=null">
                AND house.rental &lt; #{rentals.queryEnd}
            </if>
            <if test="rentals.queryStart!=null and rentals.queryEnd==null">
                AND house.rental &gt;= #{rentals.queryStart}
            </if>
        </if>
    </select>
    <select id="selectById" resultType="cn.edu.tf.dto.HouseDTO">
        select house.id,
               house.user_id,
               house.huxing_shi,
               house.huxing_ting,
               house.huxing_wei,
               house.area,
               house.current_floor,
               house.total_floor,
               house.rental,
               house.rental_include,
               house.house_include,
               house.`require`,
               house.description,
               house.img_box_id,
               house.post_time,
               house.status,
               house.post_time,
               plot.plot_name,
               plot.address,
               u.username contact_name,
               u.email,
               u.phone    contact_phone,
               u.gender   contact_gender,
               u.avatar,
               pm.name    payment,
               tw.name    towards
        from plot,
             house
                 LEFT JOIN USER u ON house.user_id = u.id
                 LEFT JOIN payment pm ON pm.id = house.payment_id
                 LEFT JOIN towards tw ON tw.id = house.towards_id
        WHERE plot.id = house.plot_id
          AND house.id = #{houseId}
    </select>
    <select id="myPost" resultType="cn.edu.tf.dto.HouseDTO">
        SELECT h.id,
        h.huxing_shi,
        h.huxing_ting,
        h.huxing_wei,
        h.area,
        h.current_floor,
        h.total_floor,
        h.rental,
        h.post_time,
        CASE h.status
        WHEN 'N' then '未出租'
        WHEN 'Y' THEN '已出租'
        END AS house_status,
        p.address plot_address,
        p.plot_name,
        u.username renter_name
        FROM house h
        LEFT JOIN plot p on h.plot_id=p.id
        LEFT JOIN deal d on h.id=d.house_id
        LEFT JOIN user u on u.id=d.renter_id
        <if test="userId!=null">
            WHERE h.user_id=#{userId}
        </if>
        ORDER BY h.id


    </select>
    <select id="listForAdmin" resultType="cn.edu.tf.dto.HouseDTO">
        SELECT h.id,
        h.huxing_shi,
        h.huxing_ting,
        h.huxing_wei,
        h.area,
        h.current_floor,
        h.total_floor,
        h.rental,
        h.post_time,
        CASE h.status
        WHEN 'N' then '未出租'
        WHEN 'Y' THEN '已出租'
        END AS house_status,
        p.address plot_address,
        p.plot_name,
        u.username renter_name
        FROM house h
        LEFT JOIN plot p on h.plot_id=p.id
        LEFT JOIN deal d on h.id=d.house_id
        LEFT JOIN user u on u.id=d.renter_id
        LEFT JOIN location l on l.id=p.location_id
        LEFT JOIN city c on c.id=l.city_id
        LEFT JOIN province pr on pr.id=c.province_id
        where 1=1
        AND h.user_id IN(select id from user)
        <if test="house.provinceId!=null">
            AND pr.id=#{house.provinceId}
        </if>
        <if test="house.cityId!=null">
            AND c.id=#{house.cityId}
        </if>
        <if test="house.locationId!=null">
            AND l.id=#{house.locationId}
        </if>
        <if test="house.plotName!=null and house.plotName!=''">
            AND p.plot_name like concat('%',#{house.plotName},'%')
        </if>
        ORDER BY h.id
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update house
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.plotId != null">
                plot_id = #{record.plotId,jdbcType=BIGINT},
            </if>
            <if test="record.huxingShi != null">
                huxing_shi = #{record.huxingShi,jdbcType=INTEGER},
            </if>
            <if test="record.huxingTing != null">
                huxing_ting = #{record.huxingTing,jdbcType=INTEGER},
            </if>
            <if test="record.huxingWei != null">
                huxing_wei = #{record.huxingWei,jdbcType=INTEGER},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=INTEGER},
            </if>
            <if test="record.currentFloor != null">
                current_floor = #{record.currentFloor,jdbcType=INTEGER},
            </if>
            <if test="record.totalFloor != null">
                total_floor = #{record.totalFloor,jdbcType=INTEGER},
            </if>
            <if test="record.towardsId != null">
                towards_id = #{record.towardsId,jdbcType=INTEGER},
            </if>
            <if test="record.rental != null">
                rental = #{record.rental,jdbcType=DOUBLE},
            </if>
            <if test="record.paymentId != null">
                payment_id = #{record.paymentId,jdbcType=INTEGER},
            </if>
            <if test="record.rentalInclude != null">
                rental_include = #{record.rentalInclude,jdbcType=VARCHAR},
            </if>
            <if test="record.houseInclude != null">
                house_include = #{record.houseInclude,jdbcType=VARCHAR},
            </if>
            <if test="record.require != null">
                `require` = #{record.require,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.imgBoxId != null">
                img_box_id = #{record.imgBoxId,jdbcType=BIGINT},
            </if>
            <if test="record.postTime != null">
                post_time = #{record.postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update house
        set id = #{record.id,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        plot_id = #{record.plotId,jdbcType=BIGINT},
        huxing_shi = #{record.huxingShi,jdbcType=INTEGER},
        huxing_ting = #{record.huxingTing,jdbcType=INTEGER},
        huxing_wei = #{record.huxingWei,jdbcType=INTEGER},
        area = #{record.area,jdbcType=INTEGER},
        current_floor = #{record.currentFloor,jdbcType=INTEGER},
        total_floor = #{record.totalFloor,jdbcType=INTEGER},
        towards_id = #{record.towardsId,jdbcType=INTEGER},
        rental = #{record.rental,jdbcType=DOUBLE},
        payment_id = #{record.paymentId,jdbcType=INTEGER},
        rental_include = #{record.rentalInclude,jdbcType=VARCHAR},
        house_include = #{record.houseInclude,jdbcType=VARCHAR},
        `require` = #{record.require,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        img_box_id = #{record.imgBoxId,jdbcType=BIGINT},
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
        `status` = #{record.status,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.tf.pojo.House">
        update house
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="plotId != null">
                plot_id = #{plotId,jdbcType=BIGINT},
            </if>
            <if test="huxingShi != null">
                huxing_shi = #{huxingShi,jdbcType=INTEGER},
            </if>
            <if test="huxingTing != null">
                huxing_ting = #{huxingTing,jdbcType=INTEGER},
            </if>
            <if test="huxingWei != null">
                huxing_wei = #{huxingWei,jdbcType=INTEGER},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="currentFloor != null">
                current_floor = #{currentFloor,jdbcType=INTEGER},
            </if>
            <if test="totalFloor != null">
                total_floor = #{totalFloor,jdbcType=INTEGER},
            </if>
            <if test="towardsId != null">
                towards_id = #{towardsId,jdbcType=INTEGER},
            </if>
            <if test="rental != null">
                rental = #{rental,jdbcType=DOUBLE},
            </if>
            <if test="paymentId != null">
                payment_id = #{paymentId,jdbcType=INTEGER},
            </if>
            <if test="rentalInclude != null">
                rental_include = #{rentalInclude,jdbcType=VARCHAR},
            </if>
            <if test="houseInclude != null">
                house_include = #{houseInclude,jdbcType=VARCHAR},
            </if>
            <if test="require != null">
                `require` = #{require,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="imgBoxId != null">
                img_box_id = #{imgBoxId,jdbcType=BIGINT},
            </if>
            <if test="postTime != null">
                post_time = #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.tf.pojo.House">
        update house
        set user_id        = #{userId,jdbcType=BIGINT},
            plot_id        = #{plotId,jdbcType=BIGINT},
            huxing_shi     = #{huxingShi,jdbcType=INTEGER},
            huxing_ting    = #{huxingTing,jdbcType=INTEGER},
            huxing_wei     = #{huxingWei,jdbcType=INTEGER},
            area           = #{area,jdbcType=INTEGER},
            current_floor  = #{currentFloor,jdbcType=INTEGER},
            total_floor    = #{totalFloor,jdbcType=INTEGER},
            towards_id     = #{towardsId,jdbcType=INTEGER},
            rental         = #{rental,jdbcType=DOUBLE},
            payment_id     = #{paymentId,jdbcType=INTEGER},
            rental_include = #{rentalInclude,jdbcType=VARCHAR},
            house_include  = #{houseInclude,jdbcType=VARCHAR},
            `require`      = #{require,jdbcType=VARCHAR},
            description    = #{description,jdbcType=VARCHAR},
            img_box_id     = #{imgBoxId,jdbcType=BIGINT},
            post_time      = #{postTime,jdbcType=TIMESTAMP},
            `status`       = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>